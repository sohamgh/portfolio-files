summary(mepl)
summary(mlig1)
##########################################################testing top 3 ligues seperately
model1 <- lm(logwage ~ Overall + spos + League + Age + `Release (in Millions)`, data = stats_table)
summary(lm(logwage ~ Overall + spos + League + Age + `Release (in Millions)`, data = stats_table))
mlaliga <- lm(logwage ~ Overall + spos +  Age + `Release (in Millions)`, data = la_liga)
summary(mlaliga)
plot(density(model2$residuals))
plot(desity(mlaliga$residuals))
plot(density(mlaliga$residuals))
plot(density(mlaliga$residuals))
lines(density(mepla$residuals))
lines(density(mlig1$residuals))
lines(density(mepl$residuals))
#mktval regression
m2laliga <- lm(logval ~ Overall + spos +  Age + `Release (in Millions)`, data = la_liga)
summary(m2laliga)
m2epl <- lm(logval ~ Overall + spos +  Age + `Release (in Millions)`, data = EPL)
summary(m2epl)
m2lig1 <- lm(logval ~ Overall + spos +  Age + `Release (in Millions)`, data = ligue1)
plot(model1_1)
plot(model2)
plot(mlaliga)
plot(mepl)
bptest(model1_1)
library('mltools')
library("lmtest")
install.packages(lmtest)
install.packages("lmtest")
library("lmtest")
##bptest
bptest(model1_1)
bptest(mlaliga)
bptest(mepl)
bptest(mligue1)
bptest(mlig1)
distBCMod <- caret::BoxCoxTrans(stats_table$`Wage (in Thousands)`)
plot(model1_1)
#normal
plot(density(model1_1$residuals))
plot(model2)
summary(model2)
##########################################################
plot(stats_table$`Wage (in Thousands)`, stats_table$Overall)
##########################################################
plot( stats_table$Overall , stats_table$`Wage (in Thousands)`)
plot( stats_table$Age , stats_table$`Wage (in Thousands)`)
plot(density(stats_table$`Wage (in Thousands)`))
lines(density(EPL$`Wage (in Thousands)`))
plot(density(la_liga$`Wage (in Thousands)`))
plot(density(stats_table$`Wage (in Thousands)`), na.rm)
plot(density(stats_table$`Wage (in Thousands)`), na.rm = TRUE)
plot(density(stats_table$`Wage (in Thousands)`), na.rm = TRUE)
hist(stats_table$`Wage (in Thousands)`)
hist(stats_table$`Wage (in Thousands)`, 1000)
hist(stats_table$`Wage (in Thousands)`, 1000, xlim = 100)
?hist
stats_table <- stats_table %>% mutate(logwage = log(`Wage (in Thousands)`), logval = log(`Value (in Millions)`), logrel = log(`Release (in Millions)`), x2 = Overall^2)
model1_2 <- lm(logwage ~ X2 + spos + League + Age + logrel, data = stats_table)
model1_2 <- lm(logwage ~ x2 + spos + League + Age + logrel, data = stats_table)
summary(model1_2)
summary(model1_1)
model2_1 <- lm(logval ~ x2 + spos + League + Age + logrel, data = stats_table)
plot(stats_table$Overall, stats_table$logwage)
plot(stats_table$x2 , stats_table$x2)
plot(stats_table$x2 , stats_table$logwage)
plot(stats_table$Overall, stats_table$logwage)
plot(stats_table$Overall, stats_table$logval)
plot(model1_1)
#normal
plot(density(model1_1$residuals))
#not at all normal
plot(density(model2$residuals))
plot(density(la_liga$`Value (in Millions)`))
lines(density(EPL$`Value (in Millions)`))
lines(density(ligue1$`Value (in Millions)`)) ##missing values
plot(density(la_liga$`Value (in Millions)`), xlim = 400, ylim = 1200)
plot(density(la_liga$`Value (in Millions)`), xlim = range(400), ylim = 1200)
plot(density(la_liga$`Value (in Millions)`), xlim = range(400), ylim = range(1200))
plot(density(la_liga$`Value (in Millions)`), xlim = range(0,400), ylim = range(0,1200))
plot(density(la_liga$`Value (in Millions)`), xlim = range(0,800), ylim = range(0,1200))
plot(density(la_liga$`Value (in Millions)`), xlim = range(0,1000), ylim = range(0,1200))
plot(density(la_liga$`Value (in Millions)`))
plot(density(la_liga$`Value (in Millions)`), xlim = range(0,400), ylim = range(0,1))
plot(density(la_liga$`Value (in Millions)`), xlim = range(0,400), ylim = range(0,0.2))
plot(density(la_liga$`Value (in Millions)`), xlim = range(0,400), ylim = range(0,0.1))
plot(density(la_liga$`Value (in Millions)`), xlim = range(0,400), ylim = range(0,0.01))
plot(density(la_liga$`Value (in Millions)`), xlim = range(-400,400), ylim = range(0,0.01))
plot(density(la_liga$`Value (in Millions)`), xlim = range(-200,400), ylim = range(0,0.01))
lines(density(EPL$`Value (in Millions)`))
lines(density(ligue1$`Value (in Millions)`)) ##missing values
lines(density(EPL$`Value (in Millions)`), col = red)
lines(density(EPL$`Value (in Millions)`), col = Red)
lines(density(EPL$`Value (in Millions)`), col = 'red')
lines(density(ligue1$`Value (in Millions)`), col = 'blue') ##missing values
lines(density(ligue1$`Value (in Millions)`), col = 'blue', na.rm = TRUE) ##missing values
lines(density(ligue1$`Value (in Millions)`), col = 'blue', na.omit = TRUE) ##missing values
lines(density(ligue1$`Value (in Millions)`), col = 'blue', na.exclude() = TRUE) ##missing values
lines(density(ligue1$`Value (in Millions)`), col = 'blue', na.exclude()) ##missing values
View(ligue1)
lines(density(ligue1$`Value (in Millions)`, na.rm = TRUE), col = 'blue', na.exclude()) ##missing values
lines(density(ligue1$`Value (in Millions)`, na.rm = TRUE), col = 'blue') ##missing values
plot(density(la_liga$`Wage (in Thousands)`))
plot(density(la_liga$`Wage (in Thousands)`), xlim = range(-200,400), ylim = range(0,0.01))
plot(density(la_liga$`Wage (in Thousands)`), xlim = range(-200,400), ylim = range(0,0.5))
plot(density(la_liga$`Wage (in Thousands)`), xlim = range(-200,400), ylim = range(0,0.1))
plot(density(la_liga$`Wage (in Thousands)`), xlim = range(-200,400), ylim = range(0,0.05))
plot(density(la_liga$`Wage (in Thousands)`), xlim = range(-200,400), ylim = range(0,0.08))
plot(density(la_liga$`Wage (in Thousands)`), xlim = range(-200,400), ylim = range(0,0.03))
plot(density(la_liga$`Wage (in Thousands)`), xlim = range(-200,400), ylim = range(0,0.04))
lines(density(EPL$`Wage (in Thousands)`), col = 'red')
lines(density(ligue1$`Wage (in Thousands)`), na.rm = TRUE), col = 'blue')
lines(density(ligue1$`Wage (in Thousands)`, na.rm = TRUE), col = 'blue')
plot(density(la_liga$`Wage (in Thousands)`), xlim = range(-0,200), ylim = range(0,0.04))
lines(density(EPL$`Wage (in Thousands)`), col = 'red')
lines(density(ligue1$`Wage (in Thousands)`, na.rm = TRUE), col = 'blue')
plot(density(la_liga$`Value (in Millions)`), xlim = range(-200,400), ylim = range(0,0.01))
View(la_liga)
mean(la_liga$`Value (in Millions)`)
boxplot(la_liga$`Value (in Millions)`)
hist(la_liga$`Value (in Millions)`)
plot(density(la_liga$`Value (in Millions)`), xlim = range(-200,400), ylim = range(0,0.01))
plot(stats_table$logwage, stats_table$logval)
summary(model1_1)
plot(hist(EPL$`Wage (in Thousands)`))
plot(hist(EPL$`Wage (in Thousands)`), 10000)
plot(hist(EPL$`Wage (in Thousands)`), 10000)
plot(hist(EPL$`Wage (in Thousands)`), 10000)
plot(hist(EPL$`Wage (in Thousands)`), 1000)
plot(hist(EPL$`Wage (in Thousands)`)
hist(EPL$`Wage (in Thousands)`)
hist(EPL$`Wage (in Thousands)`)
plot(hist(EPL$`Wage (in Thousands)`))
mean(EPL$`Wage (in Thousands)`)
mean(la_liga$`Wage (in Thousands)`)
mean(ligue1$`Wage (in Thousands)`)
boxplot(EPL$`Wage (in Thousands)`)
plot(density(la_liga$`Value (in Millions)`), xlim = range(-200,400), ylim = range(0,0.01))
lines(density(EPL$`Value (in Millions)`), col = 'red')
lines(density(ligue1$`Value (in Millions)`, na.rm = TRUE), col = 'blue') ##missing values
plot(model2)
summary(model2)
#not at all normal
plot(density(model2$residuals))
#wage regression
mlaliga <- lm(logwage ~ Overall + spos +  Age + logrel + YAC + ContractValid + Strength + Pace + Stamina, data = la_liga)
mainTable <- read.csv('data.csv', stringsAsFactors = TRUE)
stats_table <- select(mainTable, Name, Age, Nationality, Overall, Value, Wage, Club, Release.Clause, League , spos, YAC, ContractValid , Pace, Stamina, Strength)
## some colums look wack
names(stats_table)[names(stats_table) == "Wage"] <- "Wage (in Thousands)"
names(stats_table)[names(stats_table) == "Value"] <- "Value (in Millions)"
names(stats_table)[names(stats_table) == "Release.Clause"] <- "Release (in Millions)"
stats_table$`Wage (in Thousands)` <- substring(stats_table$`Wage (in Thousands)`, 4, length(stats_table$`Wage (in Thousands)`)-1)##stop doesnt matter becuase it is somehow getting converted to char
stats_table$`Value (in Millions)` <- substring(stats_table$`Value (in Millions)`, 4, length(stats_table$`Value (in Millions)`)-1)
stats_table$`Release (in Millions)` <- substring(stats_table$`Release (in Millions)`, 4, length(stats_table$`Release (in Millions)`)-1)
stats_table$`Wage (in Thousands)` <- substring(stats_table$`Wage (in Thousands)`, 1, nchar(stats_table$`Wage (in Thousands)`)-1)
stats_table$`Release (in Millions)` <- substring(stats_table$`Release (in Millions)`, 1, nchar(stats_table$`Release (in Millions)`)-1)
stats_table$`Value (in Millions)` <- substring(stats_table$`Value (in Millions)`, 1, nchar(stats_table$`Value (in Millions)`)-1)
## character to numeric
stats_table$`Wage (in Thousands)`<- as.numeric(stats_table$`Wage (in Thousands)`)
stats_table$`Value (in Millions)`<- as.numeric(stats_table$`Value (in Millions)`)
stats_table$`Release (in Millions)`<- as.numeric(stats_table$`Release (in Millions)`)
stats_table <- stats_table %>% mutate(logwage = log(`Wage (in Thousands)`), logval = log(`Value (in Millions)`), logrel = log(`Release (in Millions)`), x2 = Overall^2)
biggestspend <- stats_table %>% select(`Wage (in Thousands)`,Overall, Club) %>% group_by(Club) %>% summarise(sumwage = sum(`Wage (in Thousands)`) , meanoverall = round(mean(Overall)))
bigspendleag <- stats_table %>% select(`Wage (in Thousands)`,Overall, League) %>% group_by(League) %>%
summarise(sumwage = sum(`Wage (in Thousands)`) , meanoverall = round(mean(Overall))) %>% filter(League != "Other")
library("tidyr")
library("dplyr")
library("data.table")
library('mltools')
library("caret")
library("ggplot2")
library("lmtest")
library("sandwich")
stats_table <- stats_table %>% mutate(logwage = log(`Wage (in Thousands)`), logval = log(`Value (in Millions)`), logrel = log(`Release (in Millions)`), x2 = Overall^2)
biggestspend <- stats_table %>% select(`Wage (in Thousands)`,Overall, Club) %>% group_by(Club) %>% summarise(sumwage = sum(`Wage (in Thousands)`) , meanoverall = round(mean(Overall)))
bigspendleag <- stats_table %>% select(`Wage (in Thousands)`,Overall, League) %>% group_by(League) %>%
summarise(sumwage = sum(`Wage (in Thousands)`) , meanoverall = round(mean(Overall))) %>% filter(League != "Other")
bigspendpos <- stats_table %>% select(`Wage (in Thousands)`,spos) %>% group_by(spos) %>%
summarise(meanwage = mean(`Wage (in Thousands)` , na.rm = TRUE))  %>%  filter(spos != "0")
stats_table <- stats_table %>% mutate(logwage = log(`Wage (in Thousands)`), logval = log(`Value (in Millions)`), logrel = log(`Release (in Millions)`), x2 = Overall^2)
biggestspend <- stats_table %>% select(`Wage (in Thousands)`,Overall, Club) %>% group_by(Club) %>% summarise(sumwage = sum(`Wage (in Thousands)`) , meanoverall = round(mean(Overall)))
bigspendleag <- stats_table %>% select(`Wage (in Thousands)`,Overall, League) %>% group_by(League) %>%
summarise(sumwage = sum(`Wage (in Thousands)`) , meanoverall = round(mean(Overall))) %>% filter(League != "Other")
mainTable <- read.csv('data.csv', stringsAsFactors = TRUE)
stats_table <- select(mainTable, Name, Age, Nationality, Overall, Value, Wage, Club, Release.Clause, League , spos, YAC, ContractValid , Pace, Stamina, Strength)
## some colums look wack
names(stats_table)[names(stats_table) == "Wage"] <- "Wage (in Thousands)"
names(stats_table)[names(stats_table) == "Value"] <- "Value (in Millions)"
names(stats_table)[names(stats_table) == "Release.Clause"] <- "Release (in Millions)"
stats_table$`Wage (in Thousands)` <- substring(stats_table$`Wage (in Thousands)`, 4, length(stats_table$`Wage (in Thousands)`)-1)##stop doesnt matter becuase it is somehow getting converted to char
stats_table$`Value (in Millions)` <- substring(stats_table$`Value (in Millions)`, 4, length(stats_table$`Value (in Millions)`)-1)
stats_table$`Release (in Millions)` <- substring(stats_table$`Release (in Millions)`, 4, length(stats_table$`Release (in Millions)`)-1)
stats_table$`Wage (in Thousands)` <- substring(stats_table$`Wage (in Thousands)`, 1, nchar(stats_table$`Wage (in Thousands)`)-1)
stats_table$`Value (in Millions)` <- substring(stats_table$`Value (in Millions)`, 1, nchar(stats_table$`Value (in Millions)`)-1)
stats_table$`Release (in Millions)` <- substring(stats_table$`Release (in Millions)`, 1, nchar(stats_table$`Release (in Millions)`)-1)
## character to numeric
stats_table$`Wage (in Thousands)`<- as.numeric(stats_table$`Wage (in Thousands)`)
stats_table$`Value (in Millions)`<- as.numeric(stats_table$`Value (in Millions)`)
stats_table$`Release (in Millions)`<- as.numeric(stats_table$`Release (in Millions)`)
stats_table <- stats_table %>% mutate(logwage = log(`Wage (in Thousands)`), logval = log(`Value (in Millions)`), logrel = log(`Release (in Millions)`), x2 = Overall^2)
biggestspend <- stats_table %>% select(`Wage (in Thousands)`,Overall, Club) %>% group_by(Club) %>% summarise(sumwage = sum(`Wage (in Thousands)`) , meanoverall = round(mean(Overall)))
bigspendleag <- stats_table %>% select(`Wage (in Thousands)`,Overall, League) %>% group_by(League) %>%
summarise(sumwage = sum(`Wage (in Thousands)`) , meanoverall = round(mean(Overall))) %>% filter(League != "Other")
bigspendpos <- stats_table %>% select(`Wage (in Thousands)`,spos) %>% group_by(spos) %>%
summarise(meanwage = mean(`Wage (in Thousands)` , na.rm = TRUE))  %>%  filter(spos != "0")
#hist(stats_table$`Wage (in Thousands)`, 1000, xlim = 100)
############################################################
##make graphs look good
la_liga <- stats_table %>% filter(League == "La_liga")
EPL <- stats_table %>% filter(League == "EPL")
ligue1 <- stats_table %>% filter(League == "Ligue 1")
#wage regression
mlaliga <- lm(logwage ~ Overall + spos +  Age + logrel + YAC + ContractValid + Strength + Pace + Stamina, data = la_liga)
mepl <- lm(logwage ~ Overall + spos +  Age + logrel + YAC + ContractValid + Strength + Pace + Stamina, data = EPL)
mlig1 <- lm(logwage ~ Overall + spos +  Age + logrel + YAC + ContractValid + Strength + Pace + Stamina, data = ligue1)
coeftest(mepl, vcov = vcovHC(mepl, type="HC1"))
coeftest(mlig1, vcov = vcovHC(mlig1, type="HC1"))
coeftest(model2, vcov = vcovHC(model2, type="HC1"))
coeftest(mlaliga, vcov = vcovHC(mlaliga, type="HC1"))
coeftest(mepl, vcov = vcovHC(mepl, type="HC1"))
coeftest(mlig1, vcov = vcovHC(mlig1, type="HC1"))
plot(density(la_liga$`Wage (in Thousands)`), xlab = "Wages(in Thousands)", xlim = range(-0,200), ylim = range(0,0.04), main = "EPL vs La Liga vs Ligue1")
lines(density(EPL$`Wage (in Thousands)`), col = 'red')
lines(density(ligue1$`Wage (in Thousands)`, na.rm = TRUE), col = 'blue')
text(locator(), labels = c("EPL", "Ligue1" , "La Liga"))
plot(density(la_liga$`Wage (in Thousands)`), xlab = "Wages(in Thousands)", xlim = range(-0,200), ylim = range(0,0.04), main = "EPL vs La Liga vs Ligue1")
lines(density(EPL$`Wage (in Thousands)`), col = 'red')
lines(density(ligue1$`Wage (in Thousands)`, na.rm = TRUE), col = 'blue')
text(locator(), labels = c("EPL", "Ligue1" , "La Liga"))
bigspendpos <- stats_table %>% select(`Wage (in Thousands)`,spos , `Value (in Millions)`) %>% group_by(spos) %>%
summarise(meanwage = mean(`Wage (in Thousands)` , na.rm = TRUE), meanval = mean(`Value (in Millions)` , na.rm = TRUE))  %>%  filter(spos != "0")
View(bigspendpos)
barplot((bigspendpos$meanval),
names.arg= bigspendpos$spos , ylab = "Mean Value (in Millions) "  )
bigspendleag <- stats_table %>% select(`Wage (in Thousands)`,Overall, League , `Value (in Millions)`) %>% group_by(League) %>%
summarise(sumwage = sum(`Wage (in Thousands)`) , meanoverall = round(mean(Overall)), sumval = sum(`Value (in Millions)` , na.rm = TRUE)) %>% filter(League != "Other")
barplot((bigspendleag$sumval),
names.arg= bigspendleag$League , ylab = "Value in Millions"  )
barplot((bigspendleag$sumval)/1000,
names.arg= bigspendleag$League , ylab = "Value in Billions"  )
plot(stats_table$Overall, stats_table$`Value (in Millions)`, xlab = "Overall Rating", ylab = "log(Market Value)")
plot(stats_table$Overall, stats_table$`Value (in Millions)`, xlab = "Overall Rating", ylab = "log(Market Value)")
plot(stats_table$Overall, stats_table$`Value (in Millions)`, xlab = "Overall Rating", ylab = "Market Value (in Millions)")
View(stats_table)
mainTable <- read.csv('data.csv', stringsAsFactors = TRUE)
stats_table <- select(mainTable, Name, Age, Nationality, Overall, Value, Wage, Club, Release.Clause, League , spos, YAC, ContractValid , Pace, Stamina, Strength)
## some colums look wack
names(stats_table)[names(stats_table) == "Wage"] <- "Wage (in Thousands)"
names(stats_table)[names(stats_table) == "Value"] <- "Value (in Millions)"
names(stats_table)[names(stats_table) == "Release.Clause"] <- "Release (in Millions)"
stats_table$`Wage (in Thousands)` <- substring(stats_table$`Wage (in Thousands)`, 4, length(stats_table$`Wage (in Thousands)`)-1)##stop doesnt matter becuase it is somehow getting converted to char
#stats_table$`Value (in Millions)` <- substring(stats_table$`Value (in Millions)`, 4, length(stats_table$`Value (in Millions)`)-1)
stats_table$`Release (in Millions)` <- substring(stats_table$`Release (in Millions)`, 4, length(stats_table$`Release (in Millions)`)-1)
stats_table$`Wage (in Thousands)` <- substring(stats_table$`Wage (in Thousands)`, 1, nchar(stats_table$`Wage (in Thousands)`)-1)
#stats_table$`Value (in Millions)` <- substring(stats_table$`Value (in Millions)`, 1, nchar(stats_table$`Value (in Millions)`)-1)
stats_table$`Release (in Millions)` <- substring(stats_table$`Release (in Millions)`, 1, nchar(stats_table$`Release (in Millions)`)-1)
## character to numeric
stats_table$`Wage (in Thousands)`<- as.numeric(stats_table$`Wage (in Thousands)`)
stats_table$`Value (in Millions)`<- as.numeric(stats_table$`Value (in Millions)`)
stats_table$`Release (in Millions)`<- as.numeric(stats_table$`Release (in Millions)`)
stats_table <- stats_table %>% mutate(logwage = log(`Wage (in Thousands)`), logval = log(`Value (in Millions)`), logrel = log(`Release (in Millions)`), x2 = Overall^2)
biggestspend <- stats_table %>% select(`Wage (in Thousands)`,Overall, Club) %>% group_by(Club) %>% summarise(sumwage = sum(`Wage (in Thousands)`) , meanoverall = round(mean(Overall)))
bigspendleag <- stats_table %>% select(`Wage (in Thousands)`,Overall, League , `Value (in Millions)`) %>% group_by(League) %>%
summarise(sumwage = sum(`Wage (in Thousands)`) , meanoverall = round(mean(Overall)), sumval = sum(`Value (in Millions)` , na.rm = TRUE)) %>% filter(League != "Other")
bigspendpos <- stats_table %>% select(`Wage (in Thousands)`,spos , `Value (in Millions)`) %>% group_by(spos) %>%
summarise(meanwage = mean(`Wage (in Thousands)` , na.rm = TRUE), meanval = mean(`Value (in Millions)` , na.rm = TRUE))  %>%  filter(spos != "0")
plot(stats_table$Overall, stats_table$`Value (in Millions)`, xlab = "Overall Rating", ylab = "Market Value (in Millions)")
View(stats_table)
mainTable <- read.csv('data.csv', stringsAsFactors = TRUE)
stats_table <- select(mainTable, Name, Age, Nationality, Overall, Value, Wage, Club, Release.Clause, League , spos, YAC, ContractValid , Pace, Stamina, Strength)
## some colums look wack
names(stats_table)[names(stats_table) == "Wage"] <- "Wage (in Thousands)"
names(stats_table)[names(stats_table) == "Value"] <- "Value (in Millions)"
names(stats_table)[names(stats_table) == "Release.Clause"] <- "Release (in Millions)"
stats_table$`Wage (in Thousands)` <- substring(stats_table$`Wage (in Thousands)`, 4, length(stats_table$`Wage (in Thousands)`)-1)##stop doesnt matter becuase it is somehow getting converted to char
#stats_table$`Value (in Millions)` <- substring(stats_table$`Value (in Millions)`, 4, length(stats_table$`Value (in Millions)`)-1)
stats_table$`Release (in Millions)` <- substring(stats_table$`Release (in Millions)`, 4, length(stats_table$`Release (in Millions)`)-1)
stats_table$`Wage (in Thousands)` <- substring(stats_table$`Wage (in Thousands)`, 1, nchar(stats_table$`Wage (in Thousands)`)-1)
#stats_table$`Value (in Millions)` <- substring(stats_table$`Value (in Millions)`, 1, nchar(stats_table$`Value (in Millions)`)-1)
stats_table$`Release (in Millions)` <- substring(stats_table$`Release (in Millions)`, 1, nchar(stats_table$`Release (in Millions)`)-1)
## character to numeric
stats_table$`Wage (in Thousands)`<- as.numeric(stats_table$`Wage (in Thousands)`)
stats_table$`Value (in Millions)`<- as.numeric(stats_table$`Value (in Millions)`)
stats_table$`Release (in Millions)`<- as.numeric(stats_table$`Release (in Millions)`)
stats_table <- stats_table %>% mutate(logwage = log(`Wage (in Thousands)`), logval = log(`Value (in Millions)`), logrel = log(`Release (in Millions)`), x2 = Overall^2)
biggestspend <- stats_table %>% select(`Wage (in Thousands)`,Overall, Club) %>% group_by(Club) %>% summarise(sumwage = sum(`Wage (in Thousands)`) , meanoverall = round(mean(Overall)))
bigspendleag <- stats_table %>% select(`Wage (in Thousands)`,Overall, League , `Value (in Millions)`) %>% group_by(League) %>%
summarise(sumwage = sum(`Wage (in Thousands)`) , meanoverall = round(mean(Overall)), sumval = sum(`Value (in Millions)` , na.rm = TRUE)) %>% filter(League != "Other")
bigspendpos <- stats_table %>% select(`Wage (in Thousands)`,spos , `Value (in Millions)`) %>% group_by(spos) %>%
summarise(meanwage = mean(`Wage (in Thousands)` , na.rm = TRUE), meanval = mean(`Value (in Millions)` , na.rm = TRUE))  %>%  filter(spos != "0")
plot(stats_table$Overall, stats_table$`Value (in Millions)`, xlab = "Overall Rating", ylab = "Market Value (in Millions)")
mainTable <- read.csv('data.csv', stringsAsFactors = TRUE)
stats_table <- select(mainTable, Name, Age, Nationality, Overall, Value, Wage, Club, Release.Clause, League , spos, YAC, ContractValid , Pace, Stamina, Strength)
## some colums look wack
names(stats_table)[names(stats_table) == "Wage"] <- "Wage (in Thousands)"
names(stats_table)[names(stats_table) == "Value"] <- "Value (in Millions)"
names(stats_table)[names(stats_table) == "Release.Clause"] <- "Release (in Millions)"
stats_table$`Wage (in Thousands)` <- substring(stats_table$`Wage (in Thousands)`, 4, length(stats_table$`Wage (in Thousands)`)-1)##stop doesnt matter becuase it is somehow getting converted to char
#stats_table$`Value (in Millions)` <- substring(stats_table$`Value (in Millions)`, 4, length(stats_table$`Value (in Millions)`)-1)
stats_table$`Release (in Millions)` <- substring(stats_table$`Release (in Millions)`, 4, length(stats_table$`Release (in Millions)`)-1)
stats_table$`Wage (in Thousands)` <- substring(stats_table$`Wage (in Thousands)`, 1, nchar(stats_table$`Wage (in Thousands)`)-1)
#stats_table$`Value (in Millions)` <- substring(stats_table$`Value (in Millions)`, 1, nchar(stats_table$`Value (in Millions)`)-1)
stats_table$`Release (in Millions)` <- substring(stats_table$`Release (in Millions)`, 1, nchar(stats_table$`Release (in Millions)`)-1)
## character to numeric
stats_table$`Wage (in Thousands)`<- as.numeric(stats_table$`Wage (in Thousands)`)
stats_table$`Value (in Millions)`<- as.numeric(stats_table$`Value (in Millions)`)
max(stats_table$`Value (in Millions)`)
mainTable <- read.csv('data.csv', stringsAsFactors = TRUE)
stats_table <- select(mainTable, Name, Age, Nationality, Overall, Value, Wage, Club, Release.Clause, League , spos, YAC, ContractValid , Pace, Stamina, Strength)
## some colums look wack
names(stats_table)[names(stats_table) == "Wage"] <- "Wage (in Thousands)"
names(stats_table)[names(stats_table) == "Value"] <- "Value (in Millions)"
names(stats_table)[names(stats_table) == "Release.Clause"] <- "Release (in Millions)"
stats_table$`Wage (in Thousands)` <- substring(stats_table$`Wage (in Thousands)`, 4, length(stats_table$`Wage (in Thousands)`)-1)##stop doesnt matter becuase it is somehow getting converted to char
#stats_table$`Value (in Millions)` <- substring(stats_table$`Value (in Millions)`, 4, length(stats_table$`Value (in Millions)`)-1)
stats_table$`Release (in Millions)` <- substring(stats_table$`Release (in Millions)`, 4, length(stats_table$`Release (in Millions)`)-1)
stats_table$`Wage (in Thousands)` <- substring(stats_table$`Wage (in Thousands)`, 1, nchar(stats_table$`Wage (in Thousands)`)-1)
#stats_table$`Value (in Millions)` <- substring(stats_table$`Value (in Millions)`, 1, nchar(stats_table$`Value (in Millions)`)-1)
stats_table$`Release (in Millions)` <- substring(stats_table$`Release (in Millions)`, 1, nchar(stats_table$`Release (in Millions)`)-1)
is.numeric(stats_table$`Value (in Millions)`)
typeof(stats_table$`Value (in Millions)`)
max(stats_table$`Value (in Millions)`)
mainTable <- read.csv('data.csv', stringsAsFactors = FALSE)
stats_table <- select(mainTable, Name, Age, Nationality, Overall, Value, Wage, Club, Release.Clause, League , spos, YAC, ContractValid , Pace, Stamina, Strength)
## some colums look wack
names(stats_table)[names(stats_table) == "Wage"] <- "Wage (in Thousands)"
names(stats_table)[names(stats_table) == "Value"] <- "Value (in Millions)"
names(stats_table)[names(stats_table) == "Release.Clause"] <- "Release (in Millions)"
stats_table$`Wage (in Thousands)` <- substring(stats_table$`Wage (in Thousands)`, 4, length(stats_table$`Wage (in Thousands)`)-1)##stop doesnt matter becuase it is somehow getting converted to char
#stats_table$`Value (in Millions)` <- substring(stats_table$`Value (in Millions)`, 4, length(stats_table$`Value (in Millions)`)-1)
stats_table$`Release (in Millions)` <- substring(stats_table$`Release (in Millions)`, 4, length(stats_table$`Release (in Millions)`)-1)
stats_table$`Wage (in Thousands)` <- substring(stats_table$`Wage (in Thousands)`, 1, nchar(stats_table$`Wage (in Thousands)`)-1)
#stats_table$`Value (in Millions)` <- substring(stats_table$`Value (in Millions)`, 1, nchar(stats_table$`Value (in Millions)`)-1)
stats_table$`Release (in Millions)` <- substring(stats_table$`Release (in Millions)`, 1, nchar(stats_table$`Release (in Millions)`)-1)
max(stats_table$`Value (in Millions)`)
is.numeric(stats_table$`Value (in Millions)`)
stats_table$`Value (in Millions)`<- as.numeric(stats_table$`Value (in Millions)`)
max(stats_table$`Value (in Millions)`)
max(stats_table$`Value (in Millions)`, na.rm = TRUE)
## character to numeric
stats_table$`Wage (in Thousands)`<- as.numeric(stats_table$`Wage (in Thousands)`)
stats_table$`Release (in Millions)`<- as.numeric(stats_table$`Release (in Millions)`)
stats_table <- stats_table %>% mutate(logwage = log(`Wage (in Thousands)`), logval = log(`Value (in Millions)`), logrel = log(`Release (in Millions)`), x2 = Overall^2)
biggestspend <- stats_table %>% select(`Wage (in Thousands)`,Overall, Club) %>% group_by(Club) %>% summarise(sumwage = sum(`Wage (in Thousands)`) , meanoverall = round(mean(Overall)))
bigspendleag <- stats_table %>% select(`Wage (in Thousands)`,Overall, League , `Value (in Millions)`) %>% group_by(League) %>%
summarise(sumwage = sum(`Wage (in Thousands)`) , meanoverall = round(mean(Overall)), sumval = sum(`Value (in Millions)` , na.rm = TRUE)) %>% filter(League != "Other")
bigspendpos <- stats_table %>% select(`Wage (in Thousands)`,spos , `Value (in Millions)`) %>% group_by(spos) %>%
summarise(meanwage = mean(`Wage (in Thousands)` , na.rm = TRUE), meanval = mean(`Value (in Millions)` , na.rm = TRUE))  %>%  filter(spos != "0")
##########################################################
plot( stats_table$Overall , stats_table$`Wage (in Thousands)`, xlab = "Overall Rating", ylab = "Wage(In Thousands)")
plot( stats_table$ContractValid , stats_table$`Wage (in Thousands)`, xlab = "Years Left", ylab = "Wage(In Thousands)")
plot(stats_table$Overall, stats_table$logwage, xlab = "Overall Rating", ylab = "Wage(In Thousands)")
plot(stats_table$Overall, stats_table$`Value (in Millions)`, xlab = "Overall Rating", ylab = "Market Value (in Millions)")
barplot((bigspendleag$sumval)/1000,
names.arg= bigspendleag$League , ylab = "Value in Billions"  )
#hist(stats_table$`Wage (in Thousands)`, 1000, xlim = 100)
############################################################
##make graphs look good
la_liga <- stats_table %>% filter(League == "La_liga")
EPL <- stats_table %>% filter(League == "EPL")
ligue1 <- stats_table %>% filter(League == "Ligue 1")
ggplot(stats_table, aes(x=logwage , fill = League )) +
geom_histogram(binwidth=0.4)+ xlim(range(0,6)) + xlab("Log(wage)")
plot(density(la_liga$`Value (in Millions)`), xlim = range(0,120), ylim = range(0,0.01), xlab = "log(Wage)" )
plot(density(la_liga$`Value (in Millions)`), xlim = range(0,120), ylim = range(0,1), xlab = "log(Wage)" )
plot(density(la_liga$`Value (in Millions)`), xlim = range(0,120), ylim = range(0,0.2), xlab = "log(Wage)" )
lines(density(EPL$`Value (in Millions)`), col = 'red')
lines(density(ligue1$`Value (in Millions)`, na.rm = TRUE), col = 'blue') ##missing values
plot(density(la_liga$`Value (in Millions)`), xlim = range(0,40), ylim = range(0,0.2), xlab = "log(Wage)" )
lines(density(EPL$`Value (in Millions)`), col = 'red')
lines(density(ligue1$`Value (in Millions)`, na.rm = TRUE), col = 'blue') ##missing values
text(locator(), labels = c("EPL", "Ligue1" , "La Liga"))
plot(density(la_liga$`Value (in Millions)`), xlim = range(0,40), ylim = range(0,0.2), xlab = "log(Wage)" , legend(c("La Liga", "EPL", "Ligue1")))
plot(density(la_liga$`Value (in Millions)`), xlim = range(0,40), ylim = range(0,0.2), xlab = "Value(In Millions))" )
lines(density(EPL$`Value (in Millions)`), col = 'red')
lines(density(ligue1$`Value (in Millions)`, na.rm = TRUE), col = 'blue') ##missing values
plot(density(la_liga$`Value (in Millions)`), xlim = range(0,40), ylim = range(0,0.2), xlab = "Value(In Millions))", main = "EPL vs La Liga vs Ligue1" )
lines(density(EPL$`Value (in Millions)`), col = 'red')
lines(density(ligue1$`Value (in Millions)`, na.rm = TRUE), col = 'blue') ##missing values
ggplot(stats_table, aes(x=`Wage (in Thousands)` , fill = League )) +
geom_histogram(binwidth=0.4)+ xlim(range(0,6)) + xlab("Wage (in Thousands)")
ggplot(stats_table, aes(x=`Wage (in Thousands)` , fill = League )) +
geom_histogram(binwidth=1)+ xlim(range(0,600)) + xlab("Wage (in Thousands)")
ggplot(stats_table, aes(x=`Wage (in Thousands)` , fill = League )) +
geom_histogram(binwidth=1)+ xlim(range(0,100)) + xlab("Wage (in Thousands)")
max(stats_table$`Wage (in Thousands)`)
max(stats_table$`Wage (in Thousands)`, na.rm = TRUE)
ggplot(stats_table, aes(x=`Value (in Millions)` , fill = League )) +
geom_histogram(binwidth=1)+ xlim(range(0,100)) + xlab("Value (in Millions)")
ggplot(stats_table, aes(x=`Value (in Millions)` , fill = League )) +
geom_histogram(binwidth=1)+ xlim(range(0,25)) + xlab("Value (in Millions)")
ggplot(stats_table, aes(x=`Value (in Millions)` , fill = League )) +
geom_histogram(binwidth=0.5)+ xlim(range(0,25)) + xlab("Value (in Millions)")
plot(stats_table$logwage, stats_table$logval, xlab = "log(wage)", ylab = "log(Market Value)")
stats_table <- stats_table %>% mutate(logwage = log(`Wage (in Thousands)`), logval = log(`Value (in Millions)`), logrel = log(`Release (in Millions)`), x2 = Overall^2)
min(stats_table$logval)
min(stats_table$logval, na.rm = TRUE)
log(0)
log(-1)
min(stats_table$`Value (in Millions)`, na.rm= TRUE)
log(0.01)
plot(stats_table$`Wage (in Thousands)`, stats_table$`Value (in Millions)`, xlab = "Wage(In Thousands)", ylab = "Value (In Millions)")
min(stats_table$`Wage (in Thousands)`, na.rm = TRUE)
max(stats_table$`Wage (in Thousands)`, na.rm = TRUE)
##########################################################testing top 3 ligues seperately
#model1 <- lm(logwage ~ Overall + spos + League + Age + `Release (in Millions)` = stats_table)
model1_1 <- lm(logwage ~ Overall + spos + League + Age + logrel , data = stats_table)
summary(model1_1)
#homoskedasticity is rejected for all. we dont bother testing model2 and model 2 variants.
#testing coefficients uder robustness
coeftest(model1_1, vcov = vcovHC(model1_1, type="HC1"))
plot( stats_table$Pace , stats_table$`Wage (in Thousands)`, xlab = "Overall Rating", ylab = "Wage(In Thousands)")
model1_4 <- lm(logwage ~ Overall + spos + League + Age + logrel + YAC + ContractValid + Strength + Pace + Stamina, data = stats_table)
model1_4 <- lm(logwage ~ Overall + spos + League + Age + logrel + YAC + ContractValid + Strength + Pace + Stamina, data = stats_table)
summary(model1_4)
model2 <- lm(logval ~ Overall + spos + League + Age + `Release (in Millions)` +Strength + Pace + Stamina, data = stats_table)
summary(model2)
model2_1 <- lm(logval ~ x2 + spos + League + Age + logrel + YAC + ContractValid, data = stats_table)
summary(model2_1)
summary(model2)
coeftest(model2, vcov = vcovHC(model2, type="HC1"))
model2 <- lm(logval ~ Overall + spos + League + Age + YAC + ContractValid + `Release (in Millions)` +Strength + Pace + Stamina, data = stats_table)
coeftest(model2, vcov = vcovHC(model2, type="HC1"))
model2 <- lm(logval ~ Overall + spos + League + Age + YAC + ContractValid + spos * League + `Release (in Millions)` +Strength + Pace + Stamina, data = stats_table)
summary(model2)
model2 <- lm(logval ~ Overall + spos + League + Age + YAC + ContractValid + spos * League + logrel +Strength + Pace + Stamina, data = stats_table)
summary(model2)
model2_1 <- lm(logval ~ Overall + spos + League + Age + YAC + ContractValid  +Strength + Pace + Stamina, data = stats_table)
summary(model2_1)
model2_1 <- lm(logval ~ Overall + spos + League + Age + YAC + ContractValid +logrel  +Strength + Pace + Stamina, data = stats_table)
summary(model2_1)
coeftest(model2, vcov = vcovHC(model2, type="HC1"))
coeftest(model2_1, vcov = vcovHC(model2_1, type="HC1"))
coeftest(model2, vcov = vcovHC(model2, type="HC1"))
coeftest(model2_1, vcov = vcovHC(model2_1, type="HC1"))
#normal
plot(density(model1_1$residuals), main = "Residual Distribution" , xlab = "Residuals" , col = c("Red", "Blue", "Black" , "Orange"))
lines(density(model1_3$residuals))
lines(density(model1_4$residuals))
lines(density(model1_5$residuals))
model1_5 <- lm(logwage ~ Overall + spos + League + Age + logrel + YAC + ContractValid + spos * League  + Strength + Pace + Stamina, data = stats_table)
lines(density(model1_5$residuals))
lines(density(model2$residuals))
lines(density(model2_1$residuals))
#normal
plot(density(model1_1$residuals), main = "Residual Distribution" , xlab = "Residuals" , col = c("Red", "Blue", "Black" , "Orange") , ylim = c(0:0.8))
#normal
plot(density(model1_1$residuals), main = "Residual Distribution" , xlab = "Residuals" , col = c("Red", "Blue", "Black" , "Orange") , ylim = range(0:0.8))
lines(density(model1_4$residuals))
lines(density(model1_5$residuals))
lines(density(model2$residuals))
lines(density(model2_1$residuals))
#not at all normal
plot(density(model2$residuals))
lines(density(model2_1$residuals))
#not at all normal
plot(density(model2$residuals) ,main = "Value Model Residual Distribution" , xlab = "Residuals" , col = c("Red", "Blue", "Black" , "Orange") )
lines(density(model2_1$residuals))
##########################################################testing top 3 ligues seperately
#model1 <- lm(logwage ~ Overall + spos + League + Age + `Release (in Millions)` = stats_table)
model1_1 <- lm(logwage ~ Overall + spos + League + Age + logrel , data = stats_table)
#model1_2 <- lm(`Wage (in Thousands)` ~ x2 + spos + League + Age + logrel, data = stats_table)
#model1_3 <- lm(logwage ~ Overall + spos + League + Age + spos * League , data = stats_table)
model1_4 <- lm(logwage ~ Overall + spos + League + Age + logrel + YAC + ContractValid + Strength + Pace + Stamina, data = stats_table)
model1_5 <- lm(logwage ~ Overall + spos + League + Age + logrel + YAC + ContractValid + spos * League  + Strength + Pace + Stamina, data = stats_table)
plot(model1_1)
plot(model1_1 , main = "Wage Regression Model 1")
plot(model1_5)
plot(model1_5, main = "Wage Regression Model")
plot(model2_1)
plot(model2_1, main = "Market Value Regression Model")
plot(stats_table$logwage, stats_table$logval, xlab = "log(wage)", ylab = "log(Market Value)")
hist(stats_table$logwage)
density(stats_table$logwage)
density(stats_table$logwage, na.rm = TRUE)
plot(density(stats_table$logwage, na.rm = TRUE))
barplot((bigspendpos$meanval),
names.arg= bigspendpos$spos , ylab = "Mean Value (in Millions) "  )
summary(model1_1)
anova(model1_4, model1_5)
summary(model1_4)
summary(model1_5)
model1_6 <- summary(lm(logwage ~ Overall + Age + logrel + YAC + ContractValid + spos * League  + Strength + Pace + Stamina, data = stats_table))
model1_6 <- summary(lm(logwage ~ Overall + Age + logrel + YAC + ContractValid + spos * League  + Strength + Pace + Stamina, data = stats_table))
model1_6 <- summary(lm(logwage ~ Overall + Age + logrel + YAC + ContractValid + spos * League  + Strength + Pace + Stamina, data = stats_table))
model1_6 <- lm(logwage ~ Overall + Age + logrel + YAC + ContractValid + spos * League  + Strength + Pace + Stamina, data = stats_table)
summary(model1_6)
#####################for correlation table
for_cor <- stats_table %>% select(Overall , spos , League , Age, logrel, YAC , ContractValid ,Strength , Pace , Stamina)
res = cor((for_cor))
#####################for correlation table
for_cor <- stats_table %>% select(Overall  , Age, logrel, YAC , ContractValid ,Strength , Pace , Stamina)
res = cor((for_cor))
round(res , 2)
res = cor((for_cor , na.rm = TRUE))
res = cor(for_cor , na.rm = TRUE)
res <- cor(for_cor, use = "pairwise.complete.obs")
round(res , 2)
summary(model1_5)
#wage regression
mlaliga <- lm(logwage ~ Overall + spos +  Age + logrel + YAC + ContractValid + Strength + Pace + Stamina, data = la_liga)
mepl <- lm(logwage ~ Overall + spos +  Age + logrel + YAC + ContractValid + Strength + Pace + Stamina, data = EPL)
mlig1 <- lm(logwage ~ Overall + spos +  Age + logrel + YAC + ContractValid + Strength + Pace + Stamina, data = ligue1)
summary(model2)
summary(model2_1)
anova(model1_4, model1_5)
anova(model1_1, model1_5)
anova(model1_1, model1_4)
anova(model1_4, model1_5)
summary(model1_5)
anova(model2, model2_1)
